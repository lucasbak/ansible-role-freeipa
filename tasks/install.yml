# Yum Packages

- name: Enable FreeIpa Packages [redhat8]
  dnf:
    name: "@idm:DL1"
    state: present
  when: (ansible_distribution == "CentOS" or ansible_distribution == "Rocky" or ansible_distribution == "AlmaLinux") and ansible_distribution_major_version >= '8'

- name: Install freeipa-server [redhat7]
  package:
    state: present
    name: "{{item}}"
    use: yum
  with_items: 
    - freeipa-server 
    - ipa-server-dns
    - ipa-client
  when: play is defined and play == 'server' and ansible_distribution == "CentOS" and ansible_distribution_major_version < '8'

- name: Install freeipa-server [redhat8]
  package:
    state: present
    name: "{{item}}"
    use: dnf
  with_items: 
    - freeipa-server 
    - ipa-server-dns
    - ipa-client
  when: (ansible_distribution == "Rocky" or ansible_distribution == "AlmaLinux") and ansible_distribution_major_version >= '8' and play == 'server'

- name: Install freeipa-client [redhat7]
  package:
    state: present
    name: "{{item}}"
    use: yum
  with_items: 
    - ipa-client
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version < '8'

- name: Install freeipa-client [redhat8]
  package:
    state: present
    name: "{{item}}"
    use: dnf
  with_items: 
    - ipa-client
  when: (ansible_distribution == "Rocky" or ansible_distribution == "AlmaLinux") and ansible_distribution_major_version >= '8'

- name: Install Free Ipa Client
  package:
    state: present
    name: "{{item}}"
    use: apt
  with_items: 
    - krb5-user
    - freeipa-client
  when: (ansible_distribution == "Ubuntu" )



# - name: Install DNS
#   yum:
#     name: 
#     state: present
#   when: (services | select('match', 'BIND') | list | count) == 1 and play is defined and play == 'server'

# - name: Install Client
#   yum:
#     name: 
#     state: present
#   when: play is defined and play == 'client'


- name: Freeipa conf dir
  file:
    path: "{{conf_dir}}"
    state: directory
    mode: 0750


# SSL Local File
- name: Copy cacert.pem
  copy:
    remote_src: True
    src: "{{ security_ssl_cacert_path }}"
    dest: "{{ conf_dir }}/cacert.pem"
  when: security_ssl_local

- name: Copy key.pem
  copy:
    remote_src: True
    src: "{{ security_ssl_cert_folder }}/{{inventory_hostname}}.key.pem"
    dest: "{{ conf_dir }}/key.pem"
  when: security_ssl_local

# SSL Remote File
- name: Copy cacert.pem
  copy:
    src: "{{ security_ssl_cacert_path }}"
    dest: "{{ conf_dir }}/cacert.pem"
  when: not security_ssl_local
- name: Copy key.pem
  copy:
    src: "{{ security_ssl_cert_folder }}/{{inventory_hostname}}.key.pem"
    dest: "{{ conf_dir }}/key.pem"
  when: not security_ssl_local

