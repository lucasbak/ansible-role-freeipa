
- name: Check CLIENT not setup
  shell: >
    echo '{{ipaadmin_password}}' | kinit admin ; ipa host-find "{{inventory_hostname }} "
  register: client_exist
  delegate_to: "{{ groups['ipaserver'] | first }}"
  ignore_errors: True

- name: Execute CLIENT setup command
  when: freeipa_exist.rc == 1
  shell: >
    echo '{{ipaadmin_password}}' | kinit admin ;
    ipa-client-install -U \
    --server {{ groups['ipaserver'] | first}} \
    --realm '{{ipaserver_realm}}' -p admin \
    -w '{{ipaadmin_password}}' \
    --hostname '{{ inventory_hostname }}' \
    --domain '{{ipaserver_domain}}' \
    {% if ipaserver_setup_dns is defined and ipaserver_setup_dns %} --enable-dns-updates {% endif %}  --force-join 
  when: client_exist.rc == 1


- name: Get CLIENT shortname
  set_fact:
     shortname: "{{ inventory_hostname | regex_search('([a-z0-9]+)')}}"
     ipadress: "{{hostvars[inventory_hostname]['ansible_ssh_host']}}"

- name: Check DNS record exists for host (CLIENT)
  shell: >
    echo '{{ipaadmin_password}}' | kinit admin ; ipa dnsrecord-find {{ipaserver_domain}} {{shortname}}
  when: ipaserver_setup_dns is defined and ipaserver_setup_dns and hostvars[inventory_hostname]['ansible_ssh_host'] is defined
  register: dns_record_exist
  ignore_errors: True

- name: Add DNS record for host (CLIENT)
  shell: >
    echo '{{ipaadmin_password}}' | kinit admin ; ipa dnsrecord-add {{ipaserver_domain}} {{shortname}}  --a-ip-address {{ipadress}} --a-create-reverse
  when: ipaserver_setup_dns is defined and ipaserver_setup_dns and hostvars[inventory_hostname]['ansible_ssh_host'] is defined and dns_record_exist.rc == 1

- name: Check DNS record exists for host (CLIENT)
  shell: >
    echo '{{ipaadmin_password}}' | kinit admin ; ipa dnsrecord-find {{ipaserver_domain}} {{shortname}}
  when: ipaserver_setup_dns is defined and ipaserver_setup_dns and hostvars[inventory_hostname]['ansible_ssh_host'] is defined
