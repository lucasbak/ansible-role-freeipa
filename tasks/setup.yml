- name: Check Installation already exist
  shell: test -f /etc/ipa/default.conf
  register: freeipa_exist
  ignore_errors: True

- name: Execute setup command
  when: freeipa_exist.rc == 1
  shell: >
    ipa-server-install -U \
    -a '{{ipaadmin_password}}' -p '{{ipamanager_password}}' --hostname '{{inventory_hostname}}' \
    --domain '{{ipaserver_domain}}' \
    --ip-address {{ansible_ssh_host}} \
    {% if idstart is defined %} --idstart={{idstart}} \ {% endif %}
    {% if idmax is defined %} --idmax={{idmax}} \ {% endif %}
    -r '{{ipaserver_realm}}' \
    {% if ipaserver_setup_dns is defined and ipaserver_setup_dns %} --setup-dns {% endif %} 
    {% if ipaserver_auto_reverse is defined and ipaserver_auto_reverse%} --auto-reverse  {% endif %}
    {% if ipaserver_no_forwarders is defined and ipaserver_no_forwarders%} --no-forwarders {% endif %}
    {% if ipaserver_forwarders %} --auto-forwarders {% endif %}
    {% if ipaserver_allow_overlap is defined and ipaserver_allow_overlap %} --allow-zone-overlap {% endif %}
    
    {% if not services['NTP'] is defined %} --no-ntp \ {% endif %}
    {% if security_ssl_external_ca is defined and security_ssl_external_ca %} --external-ca --ca-subject="{{ca_subject}}"
    {% else %} --ca-cert-file={{ conf_dir }}/cacert.pem {% endif %}

- name: "[DNS] - Setup Revers DNS Zone - check existence"
  shell: >
   echo '{{ipaadmin_password}}' | kinit admin@{{ipaserver_realm}} ; ipa dnszone-find {{reverse_zone}}.in-addr.arpa.
  register: dnsexists
  ignore_errors: True

- name: "[DNS] - Setup Revers DNS Zone - execute"
  when: ((dnsexists.rc is defined) and (dnsexists.rc == 1)) and (ipaserver_auto_reverse is defined and ipaserver_auto_reverse) and (ipaserver_setup_dns is defined and ipaserver_setup_dns) 
  shell: >
   echo '{{ipaadmin_password}}' | kinit admin@{{ipaserver_realm}} ; ipa dnszone-add {{reverse_zone}}.in-addr.arpa.

# override freeipa installer file
# - name: "[DNS] - Get FreeIPA installer file "
#   shell:
#     dest: /etc/NetworkManager/conf.d/90-dns-none.conf
#     content: |
#       [main]
#       dns=none
#     owner: root
#     group: root
#     mode: '0644'
#   register: networmanager
#   when: ansible_distribution != "Ubuntu" and ipaserver_setup_default_resolv

- name: "[DNS] - Find files with 'ipa' in name"
  find:
    paths: /etc/NetworkManager/conf.d
    patterns: "*ipa*"
  register: ipa_files

- name: "[DNS] - Override FreeIPA NetworkManager Conf"
  copy:
    dest: "{{item.path}}"
    content: |
      [main]
      dns=default

      [global-dns]
      searches={{ipaserver_domain}}

      [global-dns-domain-*]
      servers=127.0.0.1,{{freeipa_srv_nameserver_address}}
    owner: root
    group: root
    mode: '0644'
  loop: "{{ ipa_files.files }}"
  when: ansible_distribution != "Ubuntu" and ipaserver_setup_default_resolv and "{{freeipa_srv_nameserver_address}}" != "127.0.0.1"

- name: "[DNS] - Reload NetworkManager service"
  systemd:
    name: NetworkManager
    state: reloaded
  when: ansible_distribution != "Ubuntu" and ipaserver_setup_default_resolv

# useless as FreeIPA overrides the resolv.conf
# - name: "[DNS] - Write default Nameserver in resolv.conf"
#   when: ipaserver_setup_default_resolv
#   copy:
#     dest: /etc/resolv.conf
#     content: |
#       search {{ipaserver_domain}}
#       nameserver {{freeipa_srv_nameserver_address}}
#     owner: root
#     group: root
#     mode: '0644'
